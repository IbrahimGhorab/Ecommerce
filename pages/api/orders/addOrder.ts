import { GoogleSpreadsheet } from 'google-spreadsheet'
import { NextApiRequest, NextApiResponse } from 'next'
import { v4 as uuid } from 'uuid'

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  // Initialize the sheet - doc ID is the long id in the sheets URL
  const doc = new GoogleSpreadsheet(
    '1YF3npwm2TLf9M2JcWwA84DlKoo_tsdAipwTAjh5sQUw'
  )

  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: 'e-commerce@e-commerce-360705.iam.gserviceaccount.com',
    private_key:
      '-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCRwjG0G1xuhUJR\nQDmrxWFvUAMRUWCWQDWNmVcrNWQoPxjJVnnuPdrnWX7UbbE3TCR0UPYcGKJUyd85\nsnuZiikulCt1Rp5STExmLLQTDFJTB0/A8dN3ch3xG0jkVDKMiB+ne9PKKSvycVKc\nMiUVgaA7rmXXnmDk53/NA9xOs+55bGOlMac9ubVX7bXJcga0Q7+O491w22ZiYYpc\nf5JhhbJaY33/UqKGWkX0N4PLggdmeZ3r+rUz8Py9E9K0Vg2RW+6EuS/n9+vfmnS0\nyWvK2WjD/I1G9gq1b/EfS+vu2KxuOBvSEvRG7FDAPHeTskaQqMbx5GwhAgsy+2uH\nIpoQSfsbAgMBAAECggEABH58/dVMzPOQOeUbDMVx3aFqlswa3ZxuikZ3aOj6hOsn\nySgWFlcTOsgy9ZB0QwThUtzJhHrrS7tLBgJky9/LU+5URgdpYOw3/CaAtDL7DtL4\n4zVm6cCQ/8Vxl+iorlXmyUkzcdZBzqCD2uEI7QLUJ+2Wokaggi5JGHnNVHfjxcaa\nhRaST/IlrKbAj/PfUUue5BFvs4ylEcHwmE1boQkieJnz+pOYYVjRpiI19cfDPxmU\n8ZdThjcpbMdV2LYXEwsnBHjWCx9+iLGiIIAzKr+fr0x3JlfPM6T72n4i6sKrB65p\nGlyoGcl5xPI+MtW+ptNRnvyC3aiF/bX5dNErW+hjMQKBgQDCPNtB8siuaVP+IhrP\neYCS3vsCmDFfgXVtAo6PELgeiK0SwDzZD5cOt4OZ+YxW7j22sAfpiYi+AuIqNi1e\nInqCQ3wXfkJSHzanBQQZZzdethm84TRX11w3e5OrGepsUaP1zK3eZd7hQQKT90Jr\n95+6iCA8UHdrn7Xq+j5t13YPnwKBgQDAGxYyd2Te4YobezJ7v4ABOrioNss514D5\nVykE3tp6WHU58FZc0A3r8k+P9IoKetTwts3p9emZh6y49OskA5Y+xzYwUgjWdHBI\nuopTc5SOHkCXynslt/Y6QT1wGbvwQIuaZPNCKioftnY3xCP9J4YpmQwqeN1FLDvl\nCuljEcEzBQKBgFzNVrSbmuY5zLeO8+BM3PFPN/51WKGY6NG8dwBDrLRp+McMsgXD\nPRj69RWL9VFTYoj2cdFStNKT7hrc57AiKQYz2AYhfO5fm20RKHQ6rGnD92gW8TtG\n2fhoQpVtPGOkXgICWM/5PBPDS8gGSuXq2ZX1k/E9QNFa7T/ncAxq9S1hAoGBALws\nzD16/m/kdagdsYHOP9D0eFUt9zwdgNS9MAz5TwFxDMNITRB1LG3m2VCltWI2l8eD\nCYkXvU8Ku4IhRwPsD4xHDymd8dJAFIzpTP4ZxXbA43zMdnyoCqVdqpTYYGQilZ0T\nLcWuD70oufw+QRKFWMH+jRA9fGF5xuHBIoRMq/cRAoGAT1GIeeCjaURFGUKb9EzP\n1zbsM1bo4Z8+GazEhcvwEnSk3c0oL2j6Pc+/J0BsEuVyJ7RPbtQeWntbBYqx5evY\nOP2vxBFzvGBGgQg4db2ehVNPAHQTCc3pjtnPrs/+uv9RtHdaM/9xvLc4vRwLeGYh\n/EEnX1L9d5pw+76dUZBCA34=\n-----END PRIVATE KEY-----\n',
  })
  try {
    const {
      firstName,
      lastName,
      company,
      address,
      city,
      apartment,
      country,
      state,
      postalCode,
      phone,
      deliveryMethod,
      email,
      paymentMethod,
      orderDetails,
    } = req.body

    await doc.loadInfo() // loads document properties and worksheets
    // console.log(doc.title)
    //   await doc.updateProperties({ title: 'renamed doc' })

    const ordersSheet = doc.sheetsByTitle['Orders'] // or use doc.sheetsById[id] or doc.sheetsByTitle[title] or doc.sheetsByIndex[0]
    const orderDetailsSheet = doc.sheetsByTitle['OrderDetails'] // or use doc.sheetsById[id] or doc.sheetsByTitle[title] or doc.sheetsByIndex[0]
    // console.log(ordersSheet.title)
    // console.log(ordersSheet.rowCount)

    // adding / removing sheets
    //   const newSheet = await doc.addSheet({ title: 'hot new sheet!' })
    //   await newSheet.delete()

    // append rows
    const orderId = uuid()
    const orderRow = await ordersSheet.addRow({
      id: orderId,
      firstName,
      lastName,
      company,
      address,
      city,
      apartment,
      country,
      state,
      postalCode,
      phone,
      deliveryMethod,
      email,
      paymentMethod,
    }) //{ name: 'Larry Page', email: 'larry@google.com' }

    for (let i = 0; i < orderDetails.length; i++) {
      // console.log(orderDetails)
      const orderDetalisRow = await orderDetailsSheet.addRow({
        id: uuid(),
        orderId: orderId,
        productId: orderDetails[i].id,
        quantity: orderDetails[i].quantity,
      })
    }

    res.send('order Created')

    // const moreRows = await sheet.addRows([
    //   { name: 'Sergey Brin', email: 'sergey@google.com' },
    //   { name: 'Eric Schmidt', email: 'eric@google.com' },
    // ]);

    // read rows
    // const rows = await sheet.getRows(); // can pass in { limit, offset }

    // read/write row values
    // console.log(rows[0].name); // 'Larry Page'
    // rows[1].email = 'sergey@abc.xyz'; // update a value
    //   await rows[1].save(); // save updates
    // await rows[1].delete(); // delete a row
  } catch (error) {
    // console.log(error)
    res.send({ message: error })
  }
}
